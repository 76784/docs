(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{383:function(e,a,t){"use strict";t.r(a);var s=t(3),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"expressions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expressions","aria-hidden":"true"}},[e._v("#")]),e._v(" Expressions")]),e._v(" "),t("div",{pre:!0},[t("p",[e._v("Handlebars expressions are the basic unit of a Handlebars template. You can use them alone in a "),t("code",[e._v("{{mustache}}")]),e._v(", pass\nthem to a Handlebars helper, or use them as values in hash arguments.")])]),t("h2",{attrs:{id:"basic-usage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#basic-usage","aria-hidden":"true"}},[e._v("#")]),e._v(" Basic Usage")]),e._v(" "),t("p",[e._v("Handlebars expressions are some contents enclosed by double curly braces "),t("code",[e._v("{{}}")]),e._v(". In the below template, "),t("code",[e._v("firstname")]),e._v(" is a\nvariable which is enclosed by double curly braces which is said to be an expression.")]),e._v(" "),t("ExamplePart",{attrs:{examplePage:"/examples/simple-expressions.md",show:"template"}}),e._v(" "),t("p",[e._v("If the below input object is applied to the template")]),e._v(" "),t("ExamplePart",{attrs:{examplePage:"/examples/simple-expressions.md",show:"input"}}),e._v(" "),t("p",[e._v("Expressions are compiled to produce the output as follows:")]),e._v(" "),t("ExamplePart",{attrs:{examplePage:"/examples/simple-expressions.md",show:"output"}}),e._v(" "),t("h2",{attrs:{id:"path-expressions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#path-expressions","aria-hidden":"true"}},[e._v("#")]),e._v(" Path expressions")]),e._v(" "),t("p",[e._v("Handlebars expressions can also be dot-separated paths.")]),e._v(" "),t("ExamplePart",{attrs:{examplePage:"/examples/path-expressions-dot.md",show:"template"}}),e._v(" "),t("p",[e._v("This expression looks up the "),t("code",[e._v("person")]),e._v(" property in the input object and inturn looks up the "),t("code",[e._v("firstname")]),e._v(" and "),t("code",[e._v("lastname")]),e._v("\nproperty within the "),t("code",[e._v("person")]),e._v(" object.")]),e._v(" "),t("p",[e._v("Pass the below input object to the template "),t("ExamplePart",{attrs:{examplePage:"/examples/path-expressions-dot.md",show:"input"}})],1),e._v(" "),t("p",[e._v("Output will be generated as below "),t("ExamplePart",{attrs:{examplePage:"/examples/path-expressions-dot.md",show:"output"}})],1),e._v(" "),t("p",[e._v("Handlebars also supports a deprecated "),t("code",[e._v("/")]),e._v(" syntax, so you could write the above template as:")]),e._v(" "),t("ExamplePart",{attrs:{examplePage:"/examples/path-expressions-slash.md",show:"template"}}),e._v(" "),t("h2",{attrs:{id:"literal-segments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#literal-segments","aria-hidden":"true"}},[e._v("#")]),e._v(" Literal segments")]),e._v(" "),t("p",[e._v("Identifiers may be any unicode character except for the following:")]),e._v(" "),t("p",[t("em",[e._v("Whitespace")]),e._v(" "),t("code",[e._v("!")]),e._v(" "),t("code",[e._v('"')]),e._v(" "),t("code",[e._v("#")]),e._v(" "),t("code",[e._v("%")]),e._v(" "),t("code",[e._v("&")]),e._v(" "),t("code",[e._v("'")]),e._v(" "),t("code",[e._v("(")]),e._v(" "),t("code",[e._v(")")]),e._v(" "),t("code",[e._v("*")]),e._v(" "),t("code",[e._v("+")]),e._v(" "),t("code",[e._v(",")]),e._v(" "),t("code",[e._v(".")]),e._v(" "),t("code",[e._v("/")]),e._v(" "),t("code",[e._v(";")]),e._v(" "),t("code",[e._v("<")]),e._v(" "),t("code",[e._v("=")]),e._v(" "),t("code",[e._v(">")]),e._v(" "),t("code",[e._v("@")]),e._v(" "),t("code",[e._v("[")]),e._v(" "),t("code",[e._v("\\")]),e._v(" "),t("code",[e._v("]")]),e._v(" "),t("code",[e._v("^")]),e._v(" "),t("code",[e._v("`")]),e._v(" "),t("code",[e._v("{")]),e._v(" "),t("code",[e._v("|")]),e._v(" "),t("code",[e._v("}")]),e._v(" "),t("code",[e._v("~")])]),e._v(" "),t("p",[e._v("To reference a property that is not a valid identifier, you can use segment-literal notation, "),t("code",[e._v("[")]),e._v(":")]),e._v(" "),t("ExamplePart",{attrs:{examplePage:"/examples/literal-segments.md",show:"template"}}),e._v(" "),t("p",[e._v("In the example above, the template will treat the "),t("code",[e._v("each")]),e._v(" parameter roughly equivalent to this javascript:\n"),t("code",[e._v("articles[10]['#comments']")])]),e._v(" "),t("p",[e._v("You may not include a closing "),t("code",[e._v("]")]),e._v(" in a path-literal, but all other characters are fair game.")]),e._v(" "),t("p",[e._v("JavaScript-style strings, "),t("code",[e._v('"')]),e._v(" and "),t("code",[e._v("'")]),e._v(", may also be used vs. "),t("code",[e._v("[")]),e._v(" pairs.")]),e._v(" "),t("div",{pre:!0},[t("p",[e._v("In Handlebars, the values returned by the "),t("code",[e._v("{{expression}}")]),e._v(" are HTML-escaped. Say, If the expression contains "),t("code",[e._v("&")]),e._v(", then\nthe returned HTML-escaped output is genarated as "),t("code",[e._v("&amp;")]),e._v(' If you don\'t want Handlebars to escape a value, use the\n"triple-stash", '),t("code",[e._v("{{{")]),e._v(":")]),e._v(" "),t("p",[e._v("::: In the below template, You can learn how to produce the HTML escaped and raw output.")]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/html-escaping.md",show:"template"}}),e._v(" "),t("p",[e._v("Pass the special characters to the template")]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/html-escaping.md",show:"input"}}),e._v(" "),t("p",[e._v('Expressions enclosed by "triple-stash" ('),t("code",[e._v("{{{")]),e._v(") produces the raw output otherwise HTML-escaped output is generated as\nbelow.")]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/html-escaping.md",show:"output"}}),e._v(" "),t("h2",{pre:!0,attrs:{id:"helpers"}},[t("a",{pre:!0,attrs:{class:"header-anchor",href:"#helpers","aria-hidden":"true"}},[e._v("#")]),e._v(" Helpers")]),e._v(" "),t("p",[e._v("A Handlebars helper call is a simple identifier, followed by zero or more parameters (separated by space). Each\nparameter is a Handlebars expression.")]),e._v(" "),t("h3",{pre:!0,attrs:{id:"helpers-with-single-parameter"}},[t("a",{pre:!0,attrs:{class:"header-anchor",href:"#helpers-with-single-parameter","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("code",[e._v("Helpers with Single Parameter")])]),e._v(" "),t("p",[e._v("Let us see an example explaining helper with a single parameter")]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/helper-single-parameter.md",show:"template"}}),e._v(" "),t("p",[e._v("In this case, "),t("code",[e._v("link")]),e._v(" is the name of a Handlebars helper, and "),t("code",[e._v("people")]),e._v(" is a parameter to the helper. The input "),t("code",[e._v("people")]),e._v("\nobject is provided as below:")]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/helper-single-parameter.md",show:"input"}}),e._v(" "),t("p",[e._v('Handlebars evaluates parameters in exactly the same way described above in "Basic Usage".')]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/helper-single-parameter.md",show:"preparationScript"}}),e._v(" "),t("p",[e._v("About script explains the functionality of the helper "),t("code",[e._v("link")]),e._v(". The helper gets necessary values from the "),t("code",[e._v("people")]),e._v(" object\nand return a HTML link as below:")]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/helper-single-parameter.md",show:"output"}}),e._v(" "),t("p",[e._v("When returning HTML from a helper, you should return a Handlebars SafeString if you don't want it to be escaped by\ndefault. When using SafeString all unknown or unsafe data should be manually escaped with the "),t("code",[e._v("escapeExpression")]),e._v(" method.")]),e._v(" "),t("p",[e._v("You can also pass a simple String, number, or boolean as a parameter to Handlebars helpers.")]),e._v(" "),t("h3",{pre:!0,attrs:{id:"helpers-with-multiple-parameters"}},[t("a",{pre:!0,attrs:{class:"header-anchor",href:"#helpers-with-multiple-parameters","aria-hidden":"true"}},[e._v("#")]),e._v(" Helpers with Multiple Parameters")]),e._v(" "),t("p",[e._v("Let us see another example of helpers with two parameters")]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/helper-multiple-parameters.md",show:"template"}}),e._v(" "),t("p",[e._v("In this case, Handlebars will pass the link helper two parameters: the String "),t("code",[e._v("See Website")]),e._v(" and the value of\n"),t("code",[e._v("people.url")]),e._v(" from the below provided input "),t("code",[e._v("people")]),e._v(" object.")]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/helper-multiple-parameters.md",show:"input"}}),e._v(" "),t("p",[e._v("The helper function "),t("code",[e._v("link")]),e._v(" is used to generate a hyperlink as described in the script.")]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/helper-multiple-parameters.md",show:"preparationScript"}}),e._v(" "),t("p",[e._v("We will obtain the HTML link output using the input parameters")]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/helper-multiple-parameters.md",show:"output"}}),e._v(" "),t("p",[e._v("In the above example, You could use the exact same helper with dynamic text based on the value of "),t("code",[e._v("people.text")]),e._v(":")]),e._v(" "),t("Flex",{pre:!0},[t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/helper-dynamic-parameters.md",show:"template"}}),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/helper-dynamic-parameters.md",show:"input"}})],1),e._v(" "),t("h3",{pre:!0,attrs:{id:"literal-arguments"}},[t("a",{pre:!0,attrs:{class:"header-anchor",href:"#literal-arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Literal arguments")]),e._v(" "),t("p",[e._v("Helper calls may also have literal values passed to them either as parameter arguments or hash arguments. Supported\nliterals include numbers, strings, "),t("code",[e._v("true")]),e._v(", "),t("code",[e._v("false")]),e._v(", "),t("code",[e._v("null")]),e._v(" and ? "),t("code",[e._v("undefined")]),e._v(".")]),e._v(" "),t("Example",{pre:!0,attrs:{examplePage:"/examples/helper-literals",":showInputOutput":"false"}}),e._v(" "),t("h3",{pre:!0,attrs:{id:"helpers-with-hash-arguments"}},[t("a",{pre:!0,attrs:{class:"header-anchor",href:"#helpers-with-hash-arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Helpers with Hash arguments")]),e._v(" "),t("p",[e._v("Handlebars helpers can also receive an optional sequence of key-value pairs as their final parameter (referred to as\nhash arguments in the documentation):")]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/helper-hash-arguments.md",show:"template"}}),e._v(" "),t("p",[e._v("In tha template,the final parameter "),t("code",[e._v('href=people.url class="people"')]),e._v(" are hash arguments sent to the helper.")]),e._v(" "),t("p",[e._v("The keys in hash arguments must each be simple identifiers, and the values are Handlebars expressions. This means that\nvalues can be simple identifiers, paths, or Strings.")]),e._v(" "),t("p",[e._v("If we pass the below input to the template, the value of "),t("code",[e._v("people.url")]),e._v(" can be obtained from the "),t("code",[e._v("people")]),e._v(" object.")]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/helper-hash-arguments.md",show:"input"}}),e._v(" "),t("p",[e._v("As described in the helper script below, the hash arguments can be obtained from the last parameter "),t("code",[e._v("options")]),e._v(" for\nfurther processing within the helper.")]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/helper-hash-arguments.md",show:"preparationScript"}}),e._v(" "),t("p",[e._v("The output of above helper is generated as below")]),e._v(" "),t("ExamplePart",{pre:!0,attrs:{examplePage:"/examples/helper-hash-arguments.md",show:"output"}}),e._v(" "),t("p",[e._v("Handlebars provides additional metadata, such as Hash arguments, to helpers as a final parameter.")]),e._v(" "),t("p",[e._v("Handlebars also offers a mechanism for invoking a helper with a block of the template. Block helpers can then invoke\nthat block zero or more times with any context it chooses.")]),e._v(" "),t("p",[t("router-link",{pre:!0,attrs:{to:"/guide/block-helpers.html",class:"button-link"}},[e._v("Learn More: Block Helpers")])],1),e._v(" "),t("h2",{pre:!0,attrs:{id:"subexpressions"}},[t("a",{pre:!0,attrs:{class:"header-anchor",href:"#subexpressions","aria-hidden":"true"}},[e._v("#")]),e._v(" Subexpressions")]),e._v(" "),t("p",[e._v("Handlebars offers support for subexpressions, which allows you to invoke multiple helpers within a single mustache, and\npass in the results of inner helper invocations as arguments to outer helpers. Subexpressions are delimited by\nparentheses.")]),e._v(" "),t("div",{pre:!0,attrs:{class:"language-handlebars extra-class"}},[t("pre",{pre:!0,attrs:{"v-pre":"",class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("outer-helper")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("inner-helper")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'abc'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'def'")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n")])])]),t("p",[e._v("In this case, "),t("code",[e._v("inner-helper")]),e._v(" will get invoked with the string argument "),t("code",[e._v("'abc'")]),e._v(", and whatever the "),t("code",[e._v("inner-helper")]),e._v(" function\nreturns will get passed in as the first argument to "),t("code",[e._v("outer-helper")]),e._v(" (and "),t("code",[e._v("'def'")]),e._v(" will get passed in as the second\nargument to "),t("code",[e._v("outer-helper")]),e._v(").")]),e._v(" "),t("h1",{pre:!0,attrs:{id:"whitespace-control"}},[t("a",{pre:!0,attrs:{class:"header-anchor",href:"#whitespace-control","aria-hidden":"true"}},[e._v("#")]),e._v(" Whitespace Control")]),e._v(" "),t("p",[e._v("Template whitespace may be omitted from either side of any mustache statement by adding a "),t("code",[e._v("~")]),e._v(" character by the braces.\nWhen applied all whitespace on that side will be removed up to the first handlebars expression or non-whitespace\ncharacter on that side.")]),e._v(" "),t("div",{pre:!0,attrs:{class:"language-handlebars extra-class"}},[t("pre",{pre:!0,attrs:{"v-pre":"",class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[e._v("#each")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("nav")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("~")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("a")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("href")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("url")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("~")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[e._v("#if")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("test")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("~")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("title")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("~")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("^")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("~")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n      Empty\n    "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("~")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[e._v("/if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("~")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("~")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[e._v("/each")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n")])])]),t("p",[e._v("with this context:")]),e._v(" "),t("div",{pre:!0,attrs:{class:"language-js extra-class"}},[t("pre",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  nav"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" url"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"foo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" title"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"bar"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" url"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"bar"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),t("p",[e._v("results in output sans newlines and formatting whitespace:")]),e._v(" "),t("div",{pre:!0,attrs:{class:"language-html extra-class"}},[t("pre",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("a")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("href")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("foo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("bar"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("a")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("href")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("bar"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("Empty"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n")])])]),t("p",[e._v('This expands the default behavior of stripping lines that are "standalone" helpers (only a block helper, comment, or\npartial and whitespace).')]),e._v(" "),t("div",{pre:!0,attrs:{class:"language-handlebars extra-class"}},[t("pre",{pre:!0,attrs:{"v-pre":"",class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[e._v("#each")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("nav")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("a")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("href")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("url")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[e._v("#if")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("test")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("title")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("^")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n      Empty\n    "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[e._v("/if")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("~")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[e._v("/each")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n")])])]),t("p",[e._v("will render")]),e._v(" "),t("div",{pre:!0,attrs:{class:"language-html extra-class"}},[t("pre",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("a")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("href")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("foo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n  bar\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("a")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("href")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("bar"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n  Empty\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n")])])]),t("h2",{pre:!0,attrs:{id:"escaping"}},[t("a",{pre:!0,attrs:{class:"header-anchor",href:"#escaping","aria-hidden":"true"}},[e._v("#")]),e._v(" Escaping")]),e._v(" "),t("div",{pre:!0,attrs:{"v-pre":""}},[t("p",[e._v("Handlebars content may be escaped in one of two ways, inline escapes or raw block helpers. Inline escapes created by\nprefixing a mustache block with "),t("code",[e._v("\\")]),e._v(". Raw blocks are created using "),t("code",[e._v("{{{{")]),e._v(" mustache braces.")])])],1),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[e._v("\\"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("escaped")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("raw")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}}")])]),e._v("}\n  "),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("escaped")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}")])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("{{{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("/")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("raw")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[e._v("}}}")])]),e._v("}\n")])])]),t("p",[e._v("Raw blocks operate in the same manner as other "),t("router-link",{attrs:{to:"/guide/block-helpers.html"}},[e._v("block helpers")]),e._v(" with the distinction of the child\ncontent is treated as a literal string.")],1)],1)}),[],!1,null,null,null);a.default=r.exports}}]);