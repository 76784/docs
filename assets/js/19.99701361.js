(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{283:function(a,t,s){"use strict";s.r(t);var e=s(2),n=Object(e.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"expressions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#expressions","aria-hidden":"true"}},[a._v("#")]),a._v(" Expressions")]),a._v(" "),s("div",{pre:!0},[s("p",[a._v("Handlebars expressions are the basic unit of a Handlebars template. You can use them alone in a "),s("code",[a._v("{{mustache}}")]),a._v(", pass them to a Handlebars helper, or use them as values in hash arguments.")])]),s("h2",{attrs:{id:"basic-usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-usage","aria-hidden":"true"}},[a._v("#")]),a._v(" Basic Usage")]),a._v(" "),s("p",[a._v("The simplest Handlebars expression is a simple identifier:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("title")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),s("p",[a._v('This expression means "look up the '),s("code",[a._v("title")]),a._v(' property in the current context". Block helpers may manipulate the current context, but they do not change the basic meaning of an expression.')]),a._v(" "),s("p",[a._v('Actually, it means "look for a helper named '),s("code",[a._v("title")]),a._v(", then do the above\", but we'll get to that soon enough.")]),a._v(" "),s("p",[a._v("Handlebars expressions can also be dot-separated paths.")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("article")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("title")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),s("p",[a._v('This expression means "look up the '),s("code",[a._v("article")]),a._v(" property in the current context. Then look up the "),s("code",[a._v("title")]),a._v(' property in the result".')]),a._v(" "),s("p",[a._v("Handlebars also supports a deprecated "),s("code",[a._v("/")]),a._v(" syntax, so you could write the above template as:")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("article")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("title")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),s("p",[a._v("Identifiers may be any unicode character except for the following:")]),a._v(" "),s("p",[a._v("Whitespace "),s("code",[a._v("!")]),a._v(" "),s("code",[a._v('"')]),a._v(" "),s("code",[a._v("#")]),a._v(" "),s("code",[a._v("%")]),a._v(" "),s("code",[a._v("&")]),a._v(" "),s("code",[a._v("'")]),a._v(" "),s("code",[a._v("(")]),a._v(" "),s("code",[a._v(")")]),a._v(" "),s("code",[a._v("*")]),a._v(" "),s("code",[a._v("+")]),a._v(" "),s("code",[a._v(",")]),a._v(" "),s("code",[a._v(".")]),a._v(" "),s("code",[a._v("/")]),a._v(" "),s("code",[a._v(";")]),a._v(" "),s("code",[a._v("<")]),a._v(" "),s("code",[a._v("=")]),a._v(" "),s("code",[a._v(">")]),a._v(" "),s("code",[a._v("@")]),a._v(" "),s("code",[a._v("[")]),a._v(" "),s("code",[a._v("\\")]),a._v(" "),s("code",[a._v("]")]),a._v(" "),s("code",[a._v("^")]),a._v(" "),s("code",[a._v("`")]),a._v(" "),s("code",[a._v("{")]),a._v(" "),s("code",[a._v("|")]),a._v(" "),s("code",[a._v("}")]),a._v(" "),s("code",[a._v("~")])]),a._v(" "),s("p",[a._v("To reference a property that is not a valid identifier, you can use segment-literal notation, "),s("code",[a._v("[")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#each")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("articles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token brackets"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("#comments")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")])]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("subject")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("body")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/each")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v("In the example above, the template will treat the "),s("code",[a._v("each")]),a._v(" parameter roughly equivalent to this javascript: "),s("code",[a._v("articles[10]['#comments']")])]),a._v(" "),s("p",[a._v("You may not include a closing "),s("code",[a._v("]")]),a._v(" in a path-literal, but all other characters are fair game.")]),a._v(" "),s("p",[a._v("JavaScript-style strings, "),s("code",[a._v('"')]),a._v(" and "),s("code",[a._v("'")]),a._v(", may also be used vs. "),s("code",[a._v("[")]),a._v(" pairs.")]),a._v(" "),s("div",{pre:!0},[s("p",[a._v("Handlebars HTML-escapes values returned by a "),s("code",[a._v("{{expression}}")]),a._v('. If you don\'t want Handlebars to escape a value, use the "triple-stash", '),s("code",[a._v("{{{")])])]),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("foo")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}}")])]),a._v("\n")])])]),s("h2",{attrs:{id:"helpers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#helpers","aria-hidden":"true"}},[a._v("#")]),a._v(" Helpers")]),a._v(" "),s("p",[a._v("A Handlebars helper call is a simple identifier, followed by zero or more parameters (separated by space). Each parameter is a Handlebars expression.")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("link")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("story")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}}")])]),a._v("\n")])])]),s("p",[a._v("In this case, "),s("code",[a._v("link")]),a._v(' is the name of a Handlebars helper, and story is a parameter to the helper. Handlebars evaluates parameters in exactly the same way described above in "Basic Usage".')]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("Handlebars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerHelper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"link"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Handlebars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("escapeExpression")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    text "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Handlebars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("escapeExpression")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Handlebars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("SafeString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<a href=\'"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"\'>"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" text "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"</a>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("When returning HTML from a helper, you should return a Handlebars SafeString if you don't want it to be escaped by default. When using SafeString all unknown or unsafe data should be manually escaped with the "),s("code",[a._v("escapeExpression")]),a._v(" method.")]),a._v(" "),s("p",[a._v("You can also pass a simple String, number, or boolean as a parameter to Handlebars helpers.")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("link")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"See more..."')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("story")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("url")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}}")])]),a._v("\n")])])]),s("p",[a._v("In this case, Handlebars will pass the link helper two parameters: the String "),s("code",[a._v('"See more..."')]),a._v(" and the result of evaluating "),s("code",[a._v("story.url")]),a._v(" in the current context.")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("Handlebars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerHelper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"link"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  url "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Handlebars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("escapeExpression")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  text "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Handlebars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("escapeExpression")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Handlebars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("SafeString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<a href=\'"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"\'>"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" text "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"</a>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("You could use the exact same helper with dynamic text based on the value of "),s("code",[a._v("story.text")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("link")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("story")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("text")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("story")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("url")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}}")])]),a._v("\n")])])]),s("p",[a._v("Handlebars helpers can also receive an optional sequence of key-value pairs as their final parameter (referred to as hash arguments in the documentation):")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("link")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"See more..."')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("href")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("story")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("url")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"story"')]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}}")])]),a._v("\n")])])]),s("p",[a._v("The keys in hash arguments must each be simple identifiers, and the values are Handlebars expressions. This means that values can be simple identifiers, paths, or Strings.")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("Handlebars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerHelper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"link"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" attrs "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" prop "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    attrs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n      Handlebars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("escapeExpression")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("prop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'=\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("\n        Handlebars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("escapeExpression")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("prop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'\"'")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Handlebars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("SafeString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<a "')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" attrs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('" "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('">"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" Handlebars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("escapeExpression")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"</a>"')]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("Handlebars provides additional metadata, such as Hash arguments, to helpers as a final parameter.")]),a._v(" "),s("p",[a._v("Handlebars also offers a mechanism for invoking a helper with a block of the template. Block helpers can then invoke that block zero or more times with any context it chooses.")]),a._v(" "),s("p",[s("router-link",{attrs:{to:"/guide/block_helpers.html"}},[a._v("Learn More: Block Helpers")])],1),a._v(" "),s("h2",{attrs:{id:"subexpressions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#subexpressions","aria-hidden":"true"}},[a._v("#")]),a._v(" Subexpressions")]),a._v(" "),s("p",[a._v("Handlebars offers support for subexpressions, which allows you to invoke multiple helpers within a single mustache, and pass in the results of inner helper invocations as arguments to outer helpers. Subexpressions are delimited by parentheses.")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("outer-helper")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("inner-helper")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'def'")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v("In this case, "),s("code",[a._v("inner-helper")]),a._v(" will get invoked with the string argument "),s("code",[a._v("'abc'")]),a._v(", and whatever the "),s("code",[a._v("inner-helper")]),a._v(" function returns will get passed in as the first argument to "),s("code",[a._v("outer-helper")]),a._v(" (and "),s("code",[a._v("'def'")]),a._v(" will get passed in as the second argument to "),s("code",[a._v("outer-helper")]),a._v(").")]),a._v(" "),s("h1",{attrs:{id:"whitespace-control"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#whitespace-control","aria-hidden":"true"}},[a._v("#")]),a._v(" Whitespace Control")]),a._v(" "),s("p",[a._v("Template whitespace may be omitted from either side of any mustache statement by adding a "),s("code",[a._v("~")]),a._v(" character by the braces. When applied all whitespace on that side will be removed up to the first handlebars expression or non-whitespace character on that side.")]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#each")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("nav")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("~")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("url")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("~")]),s("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("test")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("~")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("title")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("~")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("~")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n      Empty\n    "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("~")]),s("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("~")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("~")]),s("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/each")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v("with this context:")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  nav"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bar"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bar"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("results in output sans newlines and formatting whitespace:")]),a._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("bar"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("Empty"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),s("p",[a._v('This expands the default behavior of stripping lines that are "standalone" helpers (only a block helper, comment, or partial and whitespace).')]),a._v(" "),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#each")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("nav")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("url")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("test")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("title")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("^")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n      Empty\n    "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/if")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("~")]),s("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/each")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),s("p",[a._v("will render")]),a._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  bar\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  Empty\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),s("h2",{attrs:{id:"escaping"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#escaping","aria-hidden":"true"}},[a._v("#")]),a._v(" Escaping")]),a._v(" "),s("div",{pre:!0},[s("p",[a._v("Handlebars content may be escaped in one of two ways, inline escapes or raw block helpers. Inline escapes created by prefixing a mustache block with "),s("code",[a._v("\\")]),a._v(". Raw blocks are created using "),s("code",[a._v("{{{{")]),a._v(" mustache braces.")])]),s("div",{staticClass:"language-handlebars extra-class"},[s("pre",{pre:!0,attrs:{class:"language-handlebars"}},[s("code",[a._v("\\"),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("escaped")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("raw")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}}")])]),a._v("}\n  "),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("escaped")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("raw")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}}")])]),a._v("}\n")])])]),s("p",[a._v("Raw blocks operate in the same manner as other "),s("router-link",{attrs:{to:"/guide/block_helpers.html"}},[a._v("block helpers")]),a._v(" with the distinction of the child content is treated as a literal string.")],1)])},[],!1,null,null,null);t.default=n.exports}}]);